{"ast":null,"code":"var _jsxFileName = \"/Users/vaughncampos/Desktop/sync/frontend/src/components/Sync.jsx\";\nimport React, { Component } from 'react';\n\nclass Sync extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sync: [],\n      clicked: false\n    };\n\n    this.renderSync = () => {\n      if (this.state.clicked) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 14\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }\n        }, this.state.sync.map(song => /*#__PURE__*/React.createElement(\"li\", {\n          key: song.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }\n        }, song))));\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/users/sync\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: this.state.username\n      })\n    }).then(res => res.json()).then(data => this.setState({\n      sync: data.sync\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"/users/sync\",\n      method: \"POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"syncUser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Enter user to sync with: \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"syncUser\",\n      placeholder: \"username\",\n      value: this.state.username,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onCLick: () => this.setState({\n        clicked: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Sync!\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Sync\"), this.renderSync(), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, this.state.sync.map(song => /*#__PURE__*/React.createElement(\"li\", {\n      key: song.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, song)))));\n  }\n\n}\n\nexport default Sync;","map":{"version":3,"sources":["/Users/vaughncampos/Desktop/sync/frontend/src/components/Sync.jsx"],"names":["React","Component","Sync","state","sync","clicked","renderSync","map","song","id","componentDidMount","fetch","method","body","JSON","stringify","user","username","then","res","json","data","setState","render","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BE,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,OAAO,EAAE;AAFH,KADmB;;AAAA,SAc3BC,UAd2B,GAcd,MAAM;AACjB,UAAI,KAAKH,KAAL,CAAWE,OAAf,EAAwB;AACtB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,KAAKF,KAAL,CAAWC,IAAX,CAAgBG,GAAhB,CAAoBC,IAAI,iBACxB;AAAI,UAAA,GAAG,EAAGA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBD,IAAtB,CADA,CADJ,CADH,CAAP;AAOD;AACF,KAxB0B;AAAA;;AAM3BE,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACnBC,MAAAA,MAAM,EAAC,MADY;AAEnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWc;AAAnB,OAAf;AAFa,KAAhB,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAICF,IAJD,CAIMG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAElB,MAAAA,IAAI,EAAEiB,IAAI,CAACjB;AAAb,KAAd,CAJd;AAKD;;AAcDmB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,MAAM,EAAC,aAAb;AAA2B,MAAA,MAAM,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,WAAW,EAAC,UAFd;AAGE,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWc,QAHpB;AAIE,MAAA,QAAQ,EAAEO,CAAC,IAAI,KAAKF,QAAL,CAAc;AAACL,QAAAA,QAAQ,EAAEO,CAAC,CAACC,MAAF,CAASC;AAApB,OAAd,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAQE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKJ,QAAL,CAAc;AAAEjB,QAAAA,OAAO,EAAE;AAAX,OAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEI,KAAKC,UAAL,EAFJ,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,GAAhB,CAAoBC,IAAI,iBACxB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAnB,CADA,CADJ,CAHF,CAXF,CADF;AAuBD;;AAlD0B;;AAqD7B,eAAeN,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Sync extends Component {\n  state = {\n    sync: [],\n    clicked: false\n  }\n\n  componentDidMount(){\n    fetch(\"/users/sync\", {\n      method:\"POST\",\n      body: JSON.stringify({ user: this.state.username })\n    }).then(res => res.json())\n    .then(data => this.setState({ sync: data.sync }))\n  }\n\n  renderSync = () => {\n    if (this.state.clicked) {\n      return <div>\n                <ul>\n                  { this.state.sync.map(song =>\n                    <li key={ song.id }>{ song }</li>\n                  )}\n                </ul>\n             </div>\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <form action=\"/users/sync\" method=\"POST\">\n          <label for=\"syncUser\">Enter user to sync with: </label>\n          <input\n            name=\"syncUser\"\n            placeholder=\"username\"\n            value={this.state.username}\n            onChange={e => this.setState({username: e.target.value})}\n          />\n          <button onCLick={() => this.setState({ clicked: true })}>Sync!</button>\n        </form>\n        <div>\n          <h2>Sync</h2>\n          { this.renderSync() }\n          <ul>\n            { this.state.sync.map(song =>\n              <li key={song.id}>{song}</li>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sync;\n"]},"metadata":{},"sourceType":"module"}